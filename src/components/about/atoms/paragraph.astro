---
const { text = "", class: className = "" } = Astro.props;
---

<style>
  .text-highlight-container {
    position: relative !important;
    display: inline !important;
  }

  .text-highlight-original {
    font-size: 1rem;
    line-height: 1.625;
    margin: 0 !important; /* Evita m√°rgenes externos */
    color: #101828;
  }

  .text-highlight-layer {
    position: absolute !important;
    top: 0 !important;
    left: 0 !important;
    color: black !important;
    clip-path: circle(80px at var(--mouse-x) var(--mouse-y)) !important;
    pointer-events: none !important;
    opacity: 0 !important;
    transition: opacity 0.2s ease !important;
    margin: 0 !important;
    z-index: 9999 !important;
  }

  .text-highlight-container:hover .text-highlight-layer {
    opacity: 1 !important;
  }

  @media (prefers-color-scheme: dark) {
    .text-highlight-original {
      color: #6a7282 !important;
    }

    .text-highlight-layer {
      color: white !important;
    }
  }
</style>

<div class={`text-highlight-container ${className}`} id="text-container">
  <p class="text-highlight-original text-gray-900">{text}</p>

  <p class="text-highlight-original text-highlight-layer">{text}</p>
</div>

<script is:inline>
  document
    .querySelectorAll(".text-highlight-container")
    .forEach((container) => {
      const highlight = container.querySelector(".text-highlight-layer");
      container.addEventListener("mousemove", (e) => {
        const rect = container.getBoundingClientRect();
        container.style.setProperty("--mouse-x", `${e.clientX - rect.left}px`);
        container.style.setProperty("--mouse-y", `${e.clientY - rect.top}px`);
      });
    });
</script>
