---
// src/components/services/atoms/serviveTitle.astro
export interface Props {
  title: string;
}
const { title } = Astro.props;
---

<section class="relative w-full h-screen overflow-hidden">
  <!-- Vídeo de fondo -->
  <video
    src="/videos/services/bgOurServices.mp4"
    autoplay
    muted
    loop
    playsinline
    class="absolute inset-0 w-full h-full object-cover"></video>
  <div class="absolute inset-0 overlay-bg"></div>

  <div
    class="relative z-10 flex flex-col items-center justify-center h-full px-4"
  >
    <div class="text-container">
      <h2
        id="typewriter-title"
        class="typewriter-title 
             border-b-8"
        data-text={title}
      >
        {title}
      </h2>
    </div>

    <!-- "Ver más" con icono de flecha -->
    <div
      id="ver-mas-container"
      class="mt-16 text-accent dark:text-accent-dark text-2xl font-medium flex flex-col items-center opacity-0"
    >
      <span>Ver más</span>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-8 w-8 mt-2 animate-bounce"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
      </svg>
    </div>
  </div>

  <!-- Capa de degradado sincronizada con el color de fondo -->
  <div
    class="absolute bottom-0 left-0 w-full h-32
           fade-gradient pointer-events-none"
  >
  </div>
</section>

<style>
  /* Overlay background with theme colors */
  .overlay-bg {
    background-color: rgba(0, 0, 0, 0.5);
  }
  
  /* Theme colors for title and button */
  .typewriter-title {
    color: var(--color-accent);
    font-size: 6rem;
    font-weight: bold;
    padding-bottom: 0.5rem;
    border-color: var(--color-accent);
    position: relative;
    white-space: nowrap;
    overflow: visible;
    width: auto;
    opacity: 1;
  }
  
  .ver-mas-text {
    color: var(--color-accent);
    font-size: 1.5rem;
    font-weight: 500;
  }
  
  /* Dark mode theme adjustments */
  :global(.dark) .typewriter-title {
    color: var(--color-dark-accent);
    border-color: var(--color-dark-accent);
  }
  
  :global(.dark) .ver-mas-text {
    color: var(--color-dark-accent);
  }
  
  /* Fade gradient sincronizado con los colores de fondo de services.astro */
  .fade-gradient {
    background: linear-gradient(to bottom, transparent, var(--color-background-light));
    opacity: 0;
    transition: opacity 0.5s ease;
  }
  
  :global(.dark) .fade-gradient {
    background: linear-gradient(to bottom, transparent, var(--color-dark-background-light));
  }
  
  /* Contenedor para mantener el ancho */
  .text-container {
    display: inline-block;
    min-width: 20ch;
  }

  /* Estilo base para el gradiente de desvanecimiento */
  .fade-gradient {
    opacity: 0;
    transition: opacity 0.5s ease;
  }

  /* Esta clase será añadida por JavaScript cuando se haga scroll */
  .fade-visible {
    opacity: 1;
  }

  /* Estilos para el efecto de escribir letra por letra */
  .typewriter-title {
    position: relative;
    white-space: nowrap;
    overflow: visible;
    width: auto;
    opacity: 1;
  }
  /* Cursor parpadeante */
  .cursor-blink {
    border-right: 0.15em solid;
    animation: blink-caret 0.75s step-end infinite;
    border-color: var(--color-accent);
  }
  
  :global(.dark) .cursor-blink {
    border-color: var(--color-dark-accent);
  }

  @keyframes blink-caret {
    from,
    to {
      border-color: transparent;
    }
    50% {
      border-color: #4caf50;
    }
  }

  /* Animación de rebote para la flecha */
  .animate-bounce {
    animation: bounce 1.5s infinite;
  }

  @keyframes bounce {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(10px);
    }
  }

  /* Transición para "Ver más" */
  #ver-mas-container {
    transition: opacity 1s ease;
  }

  /* Clase para mostrar "Ver más" */
  .ver-mas-visible {
    opacity: 1 !important;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    try {
      // Obtenemos elementos por ID para mayor confiabilidad
      const titleElement = document.getElementById("typewriter-title");
      const verMasContainer = document.getElementById("ver-mas-container");


      // Verificamos la existencia del elemento del título
      if (!titleElement) return;

      // Obtenemos el texto con una opción de fallback
      const textContent = titleElement.getAttribute("data-text");
      if (!textContent || textContent.length === 0) return;

      // Inicialmente mostramos el título completo, luego lo ocultamos para la animación
      const originalText = titleElement.textContent || "";
      titleElement.textContent = "";

      // Añadimos el cursor parpadeante
      titleElement.classList.add("cursor-blink");

      // Variable para seguir la posición actual en el texto
      let currentPosition = 0;

      // Función para escribir el texto caracter por caracter
      const typeNextCharacter = () => {
        try {
          if (!titleElement) return; // Verificación adicional por seguridad

          if (currentPosition < textContent.length) {
            const currentChar = textContent.charAt(currentPosition);
            titleElement.textContent += currentChar;
            currentPosition++;
            setTimeout(typeNextCharacter, 150);
          } else {
            // Animación completa, removemos el cursor
            setTimeout(() => {
              try {
                if (titleElement) {
                  titleElement.classList.remove("cursor-blink");
                }

                // Mostramos el botón "Ver más"
                if (verMasContainer) {
                  verMasContainer.classList.add("ver-mas-visible");
                }
              } catch (e) {
                console.error("Error al finalizar la animación:", e);
              }
            }, 500);
          }
        } catch (e) {
          console.error("Error en la animación typewriter:", e);

          // Restauramos el texto original en caso de error
          if (titleElement) {
            titleElement.textContent = originalText;
          }
        }
      };

      // Iniciamos la animación después de un breve retraso
      setTimeout(typeNextCharacter, 500);

      // Funcionalidad de scroll suave para el botón "Ver más"
      if (verMasContainer) {
        verMasContainer.addEventListener("click", () => {
          try {
            const windowHeight = window.innerHeight;
            window.scrollTo({
              top: windowHeight,
              behavior: "smooth",
            });
          } catch (e) {
            console.error("Error al realizar scroll:", e);

            // Fallback para navegadores que no soportan scrollTo con opciones
            window.scrollTo(0, window.innerHeight);
          }
        });
      }

      // Manejo del fade gradient al hacer scroll
      const fadeGradient = document.querySelector(".fade-gradient");
      if (fadeGradient) {
        const handleScroll = () => {
          try {
            const scrollPosition = window.scrollY || window.pageYOffset;
            const windowHeight = window.innerHeight;

            if (scrollPosition > windowHeight * 0.3) {
              fadeGradient.classList.add("fade-visible");
            } else {
              fadeGradient.classList.remove("fade-visible");
            }
          } catch (e) {
            console.error("Error al manejar el scroll:", e);
          }
        };

        window.addEventListener("scroll", handleScroll);
        handleScroll(); // Llamada inicial
      }
    } catch (e) {
      console.error("Error general en el script:", e);
    }
  });
</script>
