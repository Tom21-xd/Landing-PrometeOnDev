---
import DetailServiceCard from "../molecules/detailServiceCard.astro";
import InfoCard from "../atoms/infoCard.astro";

interface Props {
  id: string;
  imageSrc: string;
  title: string;
  alt: string;
  infoCards: {
    title: string;
    description: string;
  }[];
  reversed?: boolean;
}

const {
  id,
  imageSrc,
  title,
  alt,
  infoCards = [],
  reversed = false,
} = Astro.props as Props;

const titleImage = `Ilustraci√≥n representativa del servicio ${title}`;
---

<section id={id} class="py-10 md:py-12 lg::py-20 px-6">
  <div
    class="max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-10"
  >
    <div
      class={`w-full max-w-[500px] mx-auto md:sticky md:top-32 md:self-start ${reversed ? "md:order-2" : "md:order-1"}`}
    >
      <DetailServiceCard
        imageSrc={imageSrc}
        title={title}
        alt={alt}
        titleImage={titleImage}
      />
    </div>

    <div
      class={`space-y-6 md:space-y-16 ${reversed ? "md:order-1 lg:pl-16" : "md:order-2 lg:pr-16"}`}
    >
      {
        infoCards.map((card, index) => (
          <div class="detail-service-reveal-card" data-index={index}>
            <InfoCard title={card.title} description={card.description} />
          </div>
        ))
      }
    </div>
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const revealCards = document.querySelectorAll(
      ".detail-service-reveal-card"
    );

    if (revealCards.length === 0) return;

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          const infoCard = entry.target.querySelector(".transform");
          if (!infoCard) return;

          if (entry.isIntersecting) {
            infoCard.classList.add("opacity-100", "translate-x-0");
          } else {
            infoCard.classList.remove("opacity-100", "translate-x-0");
          }
        });
      },
      {
        threshold: 0.3,
        rootMargin: "0px 0px -10% 0px",
      }
    );

    revealCards.forEach((card) => observer.observe(card));
  });
</script>
