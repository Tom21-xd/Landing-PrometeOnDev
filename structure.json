{
  "src": {
    "components": {
      "global": {
        "atoms": {
          "themeToggle.astro": "---\r\nconst { id = \"theme-toggle\" } = Astro.props;\r\n---\r\n\r\n<div id={id} class=\"flex items-center gap-2\">\r\n  <!-- Sol -->\r\n  <div class=\"flex items-center justify-center w-6 h-6 aspect-square\">\r\n    <i\r\n      class=\"fas fa-sun text-dark-light dark:text-dark-dark-light leading-none transition-colors duration-300\"\r\n      aria-hidden=\"true\"\r\n      title=\"Modo claro\"></i>\r\n  </div>\r\n\r\n  <!-- Switch -->\r\n  <label class=\"relative inline-flex items-center cursor-pointer\">\r\n    <input id=\"color_mode\" type=\"checkbox\" class=\"sr-only peer\" />\r\n\r\n    <div\r\n      class=\"w-[72px] h-8 bg-background-light dark:bg-dark-background-light rounded-full peer peer-checked:bg-dark-background-dark transition-colors duration-300\"\r\n    >\r\n    </div>\r\n\r\n    <span\r\n      class=\"absolute left-1 top-1 w-6 h-6 rounded-full bg-primary peer-checked:translate-x-9 transition-transform duration-300 shadow\"\r\n    ></span>\r\n  </label>\r\n\r\n  <!-- Luna -->\r\n  <div class=\"flex items-center justify-center w-6 h-6 aspect-square\">\r\n    <i\r\n      class=\"fas fa-moon text-dark-light dark:text-dark-dark-light leading-none transition-colors duration-300\"\r\n      aria-hidden=\"true\"\r\n      title=\"Modo claro\"></i>\r\n  </div>\r\n</div>\r\n\r\n<script is:inline>\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    const toggle = document.getElementById(\"color_mode\");\r\n    const root = document.documentElement;\r\n\r\n    if (!toggle) return;\r\n\r\n    const applyTheme = (dark) => {\r\n      if (dark) {\r\n        root.classList.add(\"dark\");\r\n        localStorage.setItem(\"theme\", \"dark\");\r\n      } else {\r\n        root.classList.remove(\"dark\");\r\n        localStorage.setItem(\"theme\", \"light\");\r\n      }\r\n    };\r\n\r\n    const stored = localStorage.getItem(\"theme\");\r\n    const systemPrefersDark = window.matchMedia(\r\n      \"(prefers-color-scheme: dark)\"\r\n    ).matches;\r\n    const isDark = stored === \"dark\" || (!stored && systemPrefersDark);\r\n\r\n    toggle.checked = isDark;\r\n    applyTheme(isDark);\r\n\r\n    toggle.addEventListener(\"change\", () => {\r\n      applyTheme(toggle.checked);\r\n    });\r\n  });\r\n</script>\r\n"
        }
      }
    },
    "styles": {
      "global.css": "@import \"tailwindcss\";\r\n\r\n@theme {\r\n  /* Light Mode */\r\n  --color-primary: #0376ff;\r\n  --color-primary-light: #5aa9ff;\r\n  --color-primary-dark: #025ac2;\r\n\r\n  --color-background: #ffffff;\r\n  --color-background-light: #ffffff;\r\n  --color-background-dark: #e6e6e6;\r\n\r\n  --color-dark: #000a30;\r\n  --color-dark-light: #1c2d5c;\r\n  --color-dark-darker: #00061f;\r\n\r\n  /* Dark Mode */\r\n  --color-dark-primary: #0376ff;\r\n  --color-dark-primary-light: #5aa9ff;\r\n  --color-dark-primary-dark: #025ac2;\r\n\r\n  --color-dark-background: #000a30;\r\n  --color-dark-background-light: #1c2d5c;\r\n  --color-dark-background-dark: #00061f;\r\n\r\n  --color-dark-dark: #ffffff;\r\n  --color-dark-dark-light: #ffffff;\r\n  --color-dark-dark-darker: #e6e6e6;\r\n}\r\n\r\n@layer base {\r\n  html {\r\n    @apply transition-colors duration-300 ease-in-out;\r\n  }\r\n}\r\n\r\n@keyframes scroll {\r\n  0% {\r\n    transform: translateX(0);\r\n  }\r\n  100% {\r\n    transform: translateX(-50%);\r\n  }\r\n}\r\n\r\n.paused:hover {\r\n  animation-play-state: paused !important;\r\n}\r\n"
    }
  },
  "tailwind.config.js": "export default {\r\n  darkMode: \"class\",\r\n};\r\n"
}